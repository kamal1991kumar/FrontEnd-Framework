{"version":3,"sources":["webpack:///./src/js/components/containers/IndexPage/documentation/Framework.container.jsx","webpack:///./src/js/core/modules/Http.js","webpack:///./src/js/core/hoc/withRouterConnect.jsx","webpack:///./src/js/views/indexPage/documentation/framework.view.jsx","webpack:///./src/js/services/frameworkDoc.service.js"],"names":["_react","__webpack_require__","_lodash","_withRouterConnect","frameworkDocService","_framework","_FrameworkContainer","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","nav","getOverview","getWebpack","getFileStructure","getSource","getDist","getCoreModules","getESDoc","state","docHTML","getMarkdown","handleChange","bind","React","Component","serviceName","_this2","cancelDocHXR","success","html","setState","_extends","error","noop","event","stopPropagation","tabName","target","getAttribute","_react2","default","createElement","frameworkView","FrameworkContainer","withRouterConnect","hosts","_MessageBus","_constants","_axiosCancel2","axios","Http","responseFormatter","httpResponse","data","status","headers","timestamp","Date","now","httpError","type","get","message","dispatchMBTransactionEvent","arguments","length","undefined","MessageBus","trigger","HTTP_REQUEST_TRANSACTION","executeRequest","method","config","handler","reqConfig","requestConfig","requestId","shortid","generate","host","path","timeout","onUploadProgress","currentCallback","sent","loaded","total","percent","Math","round","onDownloadProgress","received","assign","url","_config","makeRequestConfig","id","isEmpty","promise","Promise","resolve","reject","_axios2","then","response","completed","catch","cancel","hasOwnProperty","post","put","delete","_reactRedux","_reactRouterDom","mapStateToProps","mapDispatchToProps","withRouter","connect","className","entries","map","_ref","_ref2","_slicedToArray","name","title","key","data-tab","onClick","dangerouslySetInnerHTML","__html","_Http","_showdown","markdown","showdown","Converter","makeHtml","_ref3","_ref4","_ref5","_ref6","_ref7"],"mappings":"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","file":"js/chunks/b1wb3szzmq.chunk.js","sourcesContent":["import React from 'react';\nimport { noop } from 'lodash';\n\nimport { withRouterConnect } from 'core/hoc/withRouterConnect';\nimport * as frameworkDocService from 'services/frameworkDoc.service';\n\nimport { frameworkView as FrameworkView } from 'views/indexPage/documentation/framework.view';\n\nclass _FrameworkContainer extends React.Component {\n    constructor( props ) {\n        super( props );\n\n        // navigation { name/serviceName : title }\n        this.nav = {\n            getOverview: 'Framework Overview',\n            getWebpack: 'Webpack config',\n            getFileStructure: 'File/Folder structure',\n            getSource: 'Source files',\n            getDist: 'Distribution files',\n            getCoreModules: 'Core modules',\n            getESDoc: 'ESDoc'\n        };\n        \n        this.state = {\n            docHTML: null\n        };\n\n        // get initial markdown\n        this.getMarkdown( 'getOverview' );\n\n        // bind methods\n        this.handleChange = this.handleChange.bind( this );\n    }\n\n    // get markdown from a service\n    getMarkdown( serviceName ) {\n        if( this.cancelDocHXR && 'function' === typeof this.cancelDocHXR ) {\n            this.cancelDocHXR(); // cancel existing request\n        }\n\n        this.cancelDocHXR = frameworkDocService[ serviceName ]( {\n            success: ( html ) => {\n                this.setState( {\n                    ...this.state,\n                    docHTML: html\n                } );\n            },\n            error: noop\n        } );\n    }\n\n    // handle tab change\n    handleChange( event ) {\n        event.stopPropagation();\n        const tabName = event.target.getAttribute( 'data-tab' );\n        this.getMarkdown( tabName );\n    }\n\n    render() {\n        return (\n            <FrameworkView { ...this.props } nav={ this.nav } docHTML={ this.state.docHTML } handleChange={ this.handleChange } />\n        );\n    }\n\n    componentWillUnmount() {\n\n        // cancel service XHR\n        this.cancelDocHXR();\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    return {\n        hosts: state.hosts\n    };\n};\n\n// `withRouterConnect` HOC will use `withRouter` HOC from `react-router` to pass\n// props from `BrowserRouter` to <_FrameworkContainer> and use `connect` function of React Redux\nexport const FrameworkContainer = withRouterConnect( _FrameworkContainer, mapStateToProps );\n","// using axios as current Http library\nimport axios from 'axios';\nimport axiosCancel from 'axios-cancel';\nimport shortid from 'shortid';\nimport { get, isEmpty } from 'lodash';\n\nimport { MessageBus } from 'core/modules/MessageBus';\nimport { HTTP_REQUEST_TRANSACTION } from 'core/constants';\n\n// add `cancel` prototype method\n// to abort `XHR` requests and promise\naxiosCancel( axios );\n\n/**\n * @type {object}\n * @desc Http utility module which provides easy abstractions over simple Http verbs.\n * Use Http.Get, Http.Post etc. methods to make AJAX network requests. Currently, this module\n * uses Axios library to make HTTP calls, hence [config](https://github.com/axios/axios) object configuration is here.\n * @property {function|promise} get - Send HTTP GET request\n * @property {function|promise} post - Send HTTP POST request\n * @property {function|promise} put - Send HTTP PUT request\n * @property {function|promise} delete - Send HTTP DELETE request\n * @example\n * import Http from 'core/modules/Http';\n * // example 1 : callback approach\n * const cancelXHR = Http.get( config, {\n *   success: ( response ) => {},\n *   error: ( error ) => {}\n * } );\n * cancelXHR();\n *\n * // example 2 : promise approach\n * const promise = Http.get( config );\n * promise.then( response => {} ).catch( error => {} );\n * promise.cancel(); // cancel XHR\n */\nexport const Http = {};\n\n/*************************************************************/\n\n// HTTP Response formatter\n// return Standard Response Format regardless\n// of any AJAX library is used\nconst responseFormatter = {\n    \n    // when http request resolves successfully\n    success: ( httpResponse ) => {\n        return {\n            data: httpResponse.data,\n            status: httpResponse.status,\n            headers: httpResponse.headers,\n            timestamp: Date.now()\n        };\n    },\n    \n    // when http request returns error\n    error: ( httpError ) => {\n        return {\n            type: get( httpError, 'response.status' ) ? 'HTTP_ERROR' : 'NETWORK_ERROR',\n            error: get( httpError, 'response.data', httpError.message ),\n            status: get( httpError, 'response.status', 0 ),\n            headers: get( httpError, 'response.headers', {} ),\n            timestamp: Date.now()\n        };\n    }\n};\n\n// dispatch message-bus event for HTTP transaction\nconst dispatchMBTransactionEvent = ( type = 'SENT' ) => {\n    MessageBus.trigger( HTTP_REQUEST_TRANSACTION, type );\n};\n\n// `makeRequestConfig` return a fully-fledged config object for axios\n// with some default config values\nconst makeRequestConfig = ( method, config ) => {\n    \n    // default request configuration\n    const requestConfig = {\n        requestId: shortid.generate(),\n        host: 'http://localhost',\n        path: '/',\n        timeout: 60 * 1000 // 1 min\n    };\n\n    // add upload progress listener to config\n    if( config.onUploadProgress && ( 'function' === typeof config.onUploadProgress ) ) {\n        const currentCallback = config.onUploadProgress;\n        \n        config.onUploadProgress = ( event ) => {\n            currentCallback( {\n                sent: event.loaded,\n                total: event.total,\n                percent: 0 !== event.total ? Math.round( ( event.loaded / event.total ) * 100 ) : null\n            } );\n        };\n    }\n\n    // add download progress listener to config\n    if( config.onDownloadProgress && ( 'function' === typeof config.onDownloadProgress ) ) {\n        const currentCallback = config.onDownloadProgress;\n        \n        config.onDownloadProgress = ( event ) => {\n            currentCallback( {\n                received: event.loaded,\n                total: event.total,\n                percent: 0 !== event.total ? Math.round( ( event.loaded / event.total ) * 100 ) : null\n            } );\n        };\n    }\n\n    if( 'string' === typeof config ) {\n        return Object.assign( {}, requestConfig, { method: method, url: config } );\n    } else {\n        const _config = Object.assign( {}, requestConfig, config );\n        return Object.assign( {}, _config, { method: method, url: _config.host + _config.path } );\n    }\n};\n\n// execute request and take response action\nconst executeRequest = ( method, config, handler ) => {\n    \n    // create request configuration for axios\n    const reqConfig =  makeRequestConfig( method, config );\n\n    // send message-bus 'START' event\n    dispatchMBTransactionEvent( { type: 'SENT', id: reqConfig.requestId } );\n\n    // if handler is empty, return promise and cancel function\n    // in an `object`, else just return cancel function\n    if( isEmpty( handler ) ) {\n        const promise =  new Promise( ( resolve, reject ) => {\n            axios( reqConfig ).then( ( response ) => {\n                dispatchMBTransactionEvent( { type: 'SUCCESS', id: reqConfig.requestId } ); // send message-bus 'COMPLETE' event\n                reqConfig.completed = true;\n\n                return resolve( responseFormatter.success( response ) );\n            } )\n            .catch( ( response ) => {\n                dispatchMBTransactionEvent( { type: 'ERROR', id: reqConfig.requestId } ); // send message-bus 'ERROR' event\n                reqConfig.completed = true;\n\n                return reject( responseFormatter.error( response ) );\n            } );\n        } );\n\n        // add cancel method to promise\n        promise.cancel = () => {\n            if( ! reqConfig.completed ) {\n                dispatchMBTransactionEvent( { type: 'ABORT', id: reqConfig.requestId } ); // send message-bus 'ABORT' event\n                axios.cancel( reqConfig.requestId );\n            }\n\n            reqConfig.completed = true;\n        };\n\n        return promise;\n\n    } else {\n\n        // resolve request and call handler callbacks\n        axios( reqConfig ).then( ( response ) => {\n            if( ! reqConfig.completed ) {\n                dispatchMBTransactionEvent( { type: 'SUCCESS', id: reqConfig.requestId } ); // send message-bus 'COMPLETE' event\n                reqConfig.completed = true;\n\n                handler.success( responseFormatter.success( response ) );\n            }\n        } )\n        .catch( ( response ) => {\n            if( ! reqConfig.completed ) {\n                dispatchMBTransactionEvent( { type: 'ERROR', id: reqConfig.requestId } ); // send message-bus 'ERROR' event\n                reqConfig.completed = true;\n\n                if( handler.hasOwnProperty( 'error' ) && 'function' === typeof handler.error ) {\n                    handler.error( responseFormatter.error( response ) );\n                }\n            }\n        } );\n\n        // return cancel function\n        return () => {\n            if( ! reqConfig.completed ) {\n                dispatchMBTransactionEvent( { type: 'ABORT', id: reqConfig.requestId } ); // send message-bus 'ABORT' event\n                axios.cancel( reqConfig.requestId );\n            }\n            \n            reqConfig.completed = true;\n        };\n    }\n};\n\n/*************************************************************/\n\n\n// HTTP GET method\n// Use: http.get( config, {success, error} ) => cancelFunction\n// Use: http.get( config ) => { promise, cancel }\nHttp.get = ( config, handler ) => {\n    return executeRequest( 'GET', config, handler );\n};\n\n// HTTP POST method\n// Use: http.post( config, {success, error} ) => cancelFunction\n// Use: http.post( config ) => { promise, cancel }\nHttp.post = ( config, handler ) => {\n    return executeRequest( 'POST', config, handler );\n};\n\n// HTTP PUT method\n// Use: http.put( config, {success, error} ) => cancelFunction\n// Use: http.put( config ) => { promise, cancel }\nHttp.put = ( config, handler ) => {\n    return executeRequest( 'PUT', config, handler );\n};\n\n// HTTP DELETE method\n// Use: http.delete( config, {success, error} ) => cancelFunction\n// Use: http.delete( config ) => { promise, cancel }\nHttp.delete = ( config, handler ) => {\n    return executeRequest( 'DELETE', config, handler );\n};\n","/**\n * withStore( Component, mapStateToProps, mapDispatchToProps ) returns a component\n * with Route props and redux connect functionality.\n */\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n/**\n * @type {function}\n * @desc This HOC returns a React component wrapped with `Route` component from React Router to provide necessary route information as props to the component. It uses React Redux's connect function to provide state and props to the component.\n * @param {object} Component - A React component\n * @param {object} [mapStateToProps={}] - React-Redux map state to props\n * @param {object} [mapDispatchToProps={}] - React-Redux map dispatch to props\n * @returns {object} A React component\n * @example\n * import { withRouterConnect } from 'core/hoc/withRouterConnect';\n * import { TestView } from 'views/Test.view';\n *\n * const mapStateToProps = {};\n * const mapDispatchToProps = {};\n * const ComponentWithRouterConnect = withRouterConnect( TestView, mapStateToProps, mapDispatchToProps );\n */\nexport const withRouterConnect = ( Component, mapStateToProps = {}, mapDispatchToProps = {} ) => {\n    return withRouter(\n        connect( mapStateToProps, mapDispatchToProps )( Component )\n    );\n};\n","import React from 'react';\n\nexport const frameworkView = ( props ) => {\n    return (\n        <div className='view-index-documentation-framework'>\n            <div className='view-index-documentation-framework__nav'>\n                {\n                    Object.entries( props.nav ).map( ( [ name, title ] ) => {\n                        return (\n                            <button className='view-index-documentation-framework__nav__item' key={ name } data-tab={ name } onClick={ props.handleChange }>{ title }</button>\n                        );\n                    } )\n                }\n            </div>\n            <div className='view-index-documentation-framework__content'>\n                <div className='markdown-body'>\n                    {\n                        props.docHTML ? <div dangerouslySetInnerHTML={ { __html: props.docHTML } }></div> : 'loading...'\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n","/**\n * Promise type service.\n * A callback based HTTP service to get markdown documentation of avizva UI framework.\n * This service returns HTML by transforming markdown to HTML using `showdown` plugin.\n */\n\nimport { Http } from 'core/modules/Http';\nimport showdown from 'showdown';\n\n// markdown converter\nconst markdown = new showdown.Converter();\n\n/*************************************************************/\n\nexport const getOverview = ( handler ) => {\n    return Http.get( '/documentation/framework-overview.md', {\n        success: ( { data } ) => {\n            return handler.success( markdown.makeHtml( data ) );\n        },\n        error: handler.error\n    } );\n};\n\nexport const getWebpack = ( handler ) => {\n    return Http.get( '/documentation/webpack.md', {\n        success: ( { data } ) => {\n            return handler.success( markdown.makeHtml( data ) );\n        }\n    } );\n};\n\nexport const getFileStructure = ( handler ) => {\n    return Http.get( '/documentation/framework-file-structure.md', {\n        success: ( { data } ) => {\n            return handler.success( markdown.makeHtml( data ) );\n        },\n        error: handler.error\n    } );\n};\n\nexport const getSource = ( handler ) => {\n    return Http.get( '/documentation/framework-source.md', {\n        success: ( { data } ) => {\n            return handler.success( markdown.makeHtml( data ) );\n        },\n        error: handler.error\n    } );\n};\n\nexport const getDist = ( handler ) => {\n    return Http.get( '/documentation/framework-distribution.md', {\n        success: ( { data } ) => {\n            return handler.success( markdown.makeHtml( data ) );\n        },\n        error: handler.error\n    } );\n};\n\nexport const getCoreModules = ( handler ) => {\n    return Http.get( '/documentation/framework-core-modules.md', {\n        success: ( { data } ) => {\n            return handler.success( markdown.makeHtml( data ) );\n        },\n        error: handler.error\n    } );\n};\n\nexport const getESDoc = ( handler ) => {\n    return Http.get( '/documentation/esdoc.md', {\n        success: ( { data } ) => {\n            return handler.success( markdown.makeHtml( data ) );\n        },\n        error: handler.error\n    } );\n};\n"],"sourceRoot":""}